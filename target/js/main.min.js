var DEBUG=!1,VideomailFieldController=Marionette.Object.extend({videomailClient:null,fieldModel:null,initialize:function(){Backbone.Radio.DEBUG=DEBUG,this.listenTo(Backbone.Radio.channel("videomail"),"init:model",this.registerVideomailField)},getFormId:function(){return this.fieldModel.get("formID")},registerVideomailField:function(e){this.videomailClient||(this.fieldModel=e,this.loadVideomailClient(),Backbone.Radio.channel("videomail").reply("validate:required",this.validateRequired,this),Backbone.Radio.channel("videomail").reply("validate:modelData",this.validateVideomail,this),Backbone.Radio.channel("form-"+this.getFormId()).reply("maybe:submit",this.maybeSubmit,this,e))},loadVideomailClient:function(){var e=this.fieldModel.get("image_quality")||40;e>100?e=100:e<1&&(e=1),this.videomailClient=new VideomailClient({siteName:this.fieldModel.get("site_name"),video:{limitSeconds:this.fieldModel.get("limit_seconds")||90,width:this.fieldModel.get("width")||320,countdown:this.fieldModel.get("countdown")||!1},audio:{enabled:this.fieldModel.get("audio_enabled")||!1},image:{quality:e/100},selectors:{submitButtonSelector:".submit-wrap input"},callbacks:{adjustFormDataBeforePosting:this.adjustFormDataBeforePostingToVideomailServer.bind(this)},enableAutoValidation:!1,enableAutoSubmission:!1,verbose:this.fieldModel.get("verbose")||DEBUG}),this.videomailClient.on(this.videomailClient.events.PREVIEW,this.onPreview.bind(this)),this.videomailClient.on(this.videomailClient.events.SUBMITTED,this.onSubmitted.bind(this)),this.videomailClient.on(this.videomailClient.events.GOING_BACK,this.onGoingBack.bind(this)),this.videomailClient.show()},onPreview:function(e){this.fieldModel.set("videomail-key",e),Backbone.Radio.channel("fields").request("remove:error",this.fieldModel.get("id"),"required-error")},onSubmitted:function(e){var i=nfRadio.channel("app").request("get:form",this.getFormId());nfRadio.channel("form-"+i.get("id")).request("add:extra","videomail",e),nfRadio.channel("form-"+this.getFormId()).request("submit",i)},onGoingBack:function(){this.fieldModel.set("videomail-key",null),this.invalidate()},validateRequired:function(e,i){var t=this.validateVideomail(i);return t||this.invalidate(),t},invalidate:function(){Backbone.Radio.channel("fields").request("add:error",this.fieldModel.get("id"),"required-error","Record and click on stop to see a preview video.")},validateVideomail:function(e){return(e=e||this.fieldModel).get("videomail-key")||!1},hasErrors:function(e){return e.get("errors").length>0},maybeSubmit:function(e){var i=!0,t=e.getExtra("videomail"),o=this.validateVideomail(),l=this.hasErrors(e);return t||l||!o||(this.videomailClient.submit(),i=!1),i},getMergeTagValue:function(e,i){var t=this.fieldModel.get(e);if(t)if("{wp:admin_email}"===t)t=window.nfVideomail.admin_email;else{var o=t.replace("{field:","").replace("}","");o!==t&&(t=i[o])}return t},getFormValues:function(){return Backbone.Radio.channel("app").request("get:form",this.getFormId()).get("fields").reduce(function(e,i){return e[i.get("key")]=i.get("value"),e},{})},adjustFormDataBeforePostingToVideomailServer:function(e,i){var t=this.getFormValues();e.from=this.getMergeTagValue("email_from",t),e.to=this.getMergeTagValue("email_to",t),e.subject=this.getMergeTagValue("email_subject",t),e.body=this.getMergeTagValue("email_body",t),i(null,e)},onBeforeDestroy:function(){this.videomailClient.unload(),delete this.videomailClient}});jQuery(document).ready(function(){return new VideomailFieldController});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
