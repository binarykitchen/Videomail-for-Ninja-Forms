var DEBUG=!1,VideomailFieldController=Marionette.Object.extend({videomailClient:null,fieldModel:null,initialize:function(){Backbone.Radio.DEBUG=DEBUG,this.listenTo(Backbone.Radio.channel("videomail"),"init:model",this.registerVideomailField)},getFormId:function(){return this.fieldModel.get("formID")},registerVideomailField:function(e){this.videomailClient||(this.fieldModel=e,this.loadVideomailClient(),Backbone.Radio.channel("videomail").reply("validate:required",this.validateRequired,this),Backbone.Radio.channel("videomail").reply("validate:modelData",this.validateVideomail,this),Backbone.Radio.channel("form-"+this.getFormId()).reply("maybe:submit",this.maybeSubmit,this,e))},loadVideomailClient:function(){var e=this.fieldModel.get("image_quality")||40;e>100?e=100:e<1&&(e=1),this.videomailClient=new VideomailClient({siteName:this.fieldModel.get("site_name"),video:{limitSeconds:this.fieldModel.get("limit_seconds")||90,width:this.fieldModel.get("width")||320,countdown:this.fieldModel.get("countdown")||!1},audio:{enabled:this.fieldModel.get("audio_enabled")||!0},image:{quality:e/100},selectors:{submitButtonSelector:".submit-wrap input"},callbacks:{adjustFormDataBeforePosting:this.adjustFormDataBeforePostingToVideomailServer.bind(this)},enableAutoValidation:!1,enableAutoSubmission:!1,verbose:this.fieldModel.get("verbose")||DEBUG}),this.videomailClient.on(this.videomailClient.events.PREVIEW,this.onPreview.bind(this)),this.videomailClient.on(this.videomailClient.events.SUBMITTED,this.onSubmitted.bind(this)),this.videomailClient.on(this.videomailClient.events.GOING_BACK,this.onGoingBack.bind(this)),this.videomailClient.show()},onPreview:function(e){this.fieldModel.set("videomail-key",e),Backbone.Radio.channel("fields").request("remove:error",this.fieldModel.get("id"),"required-error")},onSubmitted:function(e){var i=nfRadio.channel("app").request("get:form",this.getFormId());nfRadio.channel("form-"+i.get("id")).request("add:extra","videomail",e),nfRadio.channel("form-"+this.getFormId()).request("submit",i)},onGoingBack:function(){this.fieldModel.set("videomail-key",null),this.invalidate()},validateRequired:function(e,i){var t=this.validateVideomail(i);return t||this.invalidate(),t},invalidate:function(){Backbone.Radio.channel("fields").request("add:error",this.fieldModel.get("id"),"required-error","Record and click on stop to see a preview video.")},validateVideomail:function(e){return(e=e||this.fieldModel).get("videomail-key")||!1},hasErrors:function(e){return e.get("errors").length>0},maybeSubmit:function(e){var i=!0,t=e.getExtra("videomail"),o=this.validateVideomail(),l=this.hasErrors(e);return t||l||!o||(this.videomailClient.submit(),i=!1),i},getMergeTagValue:function(e,i){var t=this.fieldModel.get(e);if(t)if("{wp:admin_email}"===t)t=window.nfVideomail.admin_email;else{var o=t.replace("{field:","").replace("}","");o!==t&&(t=i[o])}return t},getFormValues:function(){return Backbone.Radio.channel("app").request("get:form",this.getFormId()).get("fields").reduce(function(e,i){return e[i.get("key")]=i.get("value"),e},{})},adjustFormDataBeforePostingToVideomailServer:function(e,i){var t=this.getFormValues();e.from=this.getMergeTagValue("email_from",t),e.to=this.getMergeTagValue("email_to",t),e.subject=this.getMergeTagValue("email_subject",t),e.body=this.getMergeTagValue("email_body",t),i(null,e)},onBeforeDestroy:function(){this.videomailClient.unload(),delete this.videomailClient}});jQuery(document).ready(function(){return new VideomailFieldController});
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1haW4uanMiXSwibmFtZXMiOlsiREVCVUciLCJWaWRlb21haWxGaWVsZENvbnRyb2xsZXIiLCJNYXJpb25ldHRlIiwiT2JqZWN0IiwiZXh0ZW5kIiwidmlkZW9tYWlsQ2xpZW50IiwiZmllbGRNb2RlbCIsImluaXRpYWxpemUiLCJCYWNrYm9uZSIsIlJhZGlvIiwidGhpcyIsImxpc3RlblRvIiwiY2hhbm5lbCIsInJlZ2lzdGVyVmlkZW9tYWlsRmllbGQiLCJnZXRGb3JtSWQiLCJnZXQiLCJsb2FkVmlkZW9tYWlsQ2xpZW50IiwicmVwbHkiLCJ2YWxpZGF0ZVJlcXVpcmVkIiwidmFsaWRhdGVWaWRlb21haWwiLCJtYXliZVN1Ym1pdCIsImltYWdlUXVhbGl0eVBlcmNlbnRhZ2UiLCJWaWRlb21haWxDbGllbnQiLCJzaXRlTmFtZSIsInZpZGVvIiwibGltaXRTZWNvbmRzIiwid2lkdGgiLCJjb3VudGRvd24iLCJhdWRpbyIsImVuYWJsZWQiLCJpbWFnZSIsInF1YWxpdHkiLCJzZWxlY3RvcnMiLCJzdWJtaXRCdXR0b25TZWxlY3RvciIsImNhbGxiYWNrcyIsImFkanVzdEZvcm1EYXRhQmVmb3JlUG9zdGluZyIsImFkanVzdEZvcm1EYXRhQmVmb3JlUG9zdGluZ1RvVmlkZW9tYWlsU2VydmVyIiwiYmluZCIsImVuYWJsZUF1dG9WYWxpZGF0aW9uIiwiZW5hYmxlQXV0b1N1Ym1pc3Npb24iLCJ2ZXJib3NlIiwib24iLCJldmVudHMiLCJQUkVWSUVXIiwib25QcmV2aWV3IiwiU1VCTUlUVEVEIiwib25TdWJtaXR0ZWQiLCJHT0lOR19CQUNLIiwib25Hb2luZ0JhY2siLCJzaG93Iiwia2V5Iiwic2V0IiwicmVxdWVzdCIsInZpZGVvbWFpbCIsImZvcm1Nb2RlbCIsIm5mUmFkaW8iLCJpbnZhbGlkYXRlIiwiZWwiLCJ2YWxpZCIsImhhc0Vycm9ycyIsImxlbmd0aCIsIm1heWJlIiwidmlkZW9tYWlsU3VibWl0dGVkIiwiZ2V0RXh0cmEiLCJ2aWRlb21haWxSZWNvcmRlZCIsImVycm9ybmVvdXMiLCJzdWJtaXQiLCJnZXRNZXJnZVRhZ1ZhbHVlIiwiZmllbGRLZXkiLCJmb3JtVmFsdWVzIiwidmFsdWUiLCJ3aW5kb3ciLCJuZlZpZGVvbWFpbCIsImFkbWluX2VtYWlsIiwicmF3RmllbGRLZXkiLCJyZXBsYWNlIiwiZ2V0Rm9ybVZhbHVlcyIsInJlZHVjZSIsIm1lbW8iLCJmaWVsZCIsImNiIiwiZnJvbSIsInRvIiwic3ViamVjdCIsImJvZHkiLCJvbkJlZm9yZURlc3Ryb3kiLCJ1bmxvYWQiLCJqUXVlcnkiLCJkb2N1bWVudCIsInJlYWR5Il0sIm1hcHBpbmdzIjoiQUFDQSxJQUFJQSxPQUFRLEVBS1JDLHlCQUEyQkMsV0FBV0MsT0FBT0MsUUFFL0NDLGdCQUFpQixLQUdqQkMsV0FBWSxLQUVaQyxXQUFZLFdBQ1ZDLFNBQVNDLE1BQU1ULE1BQVFBLE1BRXZCVSxLQUFLQyxTQUNISCxTQUFTQyxNQUFNRyxRQUFRLGFBQ3ZCLGFBQ0FGLEtBQUtHLHlCQUlUQyxVQUFXLFdBQ1QsT0FBT0osS0FBS0osV0FBV1MsSUFBSSxXQUc3QkYsdUJBQXdCLFNBQVVQLEdBRzNCSSxLQUFLTCxrQkFDUkssS0FBS0osV0FBYUEsRUFFbEJJLEtBQUtNLHNCQUlMUixTQUFTQyxNQUFNRyxRQUFRLGFBQWFLLE1BQ2xDLG9CQUNBUCxLQUFLUSxpQkFDTFIsTUFHRkYsU0FBU0MsTUFBTUcsUUFBUSxhQUFhSyxNQUNsQyxxQkFDQVAsS0FBS1Msa0JBQ0xULE1BS0ZGLFNBQVNDLE1BQU1HLFFBQVEsUUFBVUYsS0FBS0ksYUFBYUcsTUFDakQsZUFDQVAsS0FBS1UsWUFDTFYsS0FDQUosS0FLTlUsb0JBQXFCLFdBQ25CLElBQUlLLEVBQXlCWCxLQUFLSixXQUFXUyxJQUFJLGtCQUFvQixHQUVqRU0sRUFBeUIsSUFDM0JBLEVBQXlCLElBQ2hCQSxFQUF5QixJQUNsQ0EsRUFBeUIsR0FHM0JYLEtBQUtMLGdCQUFrQixJQUFJaUIsaUJBQ3pCQyxTQUFVYixLQUFLSixXQUFXUyxJQUFJLGFBQzlCUyxPQUNFQyxhQUFjZixLQUFLSixXQUFXUyxJQUFJLGtCQUFvQixHQUN0RFcsTUFBT2hCLEtBQUtKLFdBQVdTLElBQUksVUFBWSxJQUN2Q1ksVUFBV2pCLEtBQUtKLFdBQVdTLElBQUksZUFBZ0IsR0FFakRhLE9BQ0VDLFFBQVNuQixLQUFLSixXQUFXUyxJQUFJLG1CQUFvQixHQUVuRGUsT0FDRUMsUUFBU1YsRUFBeUIsS0FFcENXLFdBQ0VDLHFCQUFzQixzQkFFeEJDLFdBRUVDLDRCQUE2QnpCLEtBQUswQiw2Q0FBNkNDLEtBQUszQixPQUd0RjRCLHNCQUFzQixFQUV0QkMsc0JBQXNCLEVBRXRCQyxRQUFTOUIsS0FBS0osV0FBV1MsSUFBSSxZQUFjZixRQUc3Q1UsS0FBS0wsZ0JBQWdCb0MsR0FBRy9CLEtBQUtMLGdCQUFnQnFDLE9BQU9DLFFBQVNqQyxLQUFLa0MsVUFBVVAsS0FBSzNCLE9BQ2pGQSxLQUFLTCxnQkFBZ0JvQyxHQUFHL0IsS0FBS0wsZ0JBQWdCcUMsT0FBT0csVUFBV25DLEtBQUtvQyxZQUFZVCxLQUFLM0IsT0FDckZBLEtBQUtMLGdCQUFnQm9DLEdBQUcvQixLQUFLTCxnQkFBZ0JxQyxPQUFPSyxXQUFZckMsS0FBS3NDLFlBQVlYLEtBQUszQixPQUV0RkEsS0FBS0wsZ0JBQWdCNEMsUUFLdkJMLFVBQVcsU0FBVU0sR0FDbkJ4QyxLQUFLSixXQUFXNkMsSUFBSSxnQkFBaUJELEdBQ3JDMUMsU0FBU0MsTUFDTkcsUUFBUSxVQUVSd0MsUUFBUSxlQUFnQjFDLEtBQUtKLFdBQVdTLElBQUksTUFBTyxtQkFHeEQrQixZQUFhLFNBQVVPLEdBQ3JCLElBQUlDLEVBQVlDLFFBQVEzQyxRQUFRLE9BQU93QyxRQUFRLFdBQVkxQyxLQUFLSSxhQUdoRXlDLFFBQVEzQyxRQUFRLFFBQVUwQyxFQUFVdkMsSUFBSSxPQUFPcUMsUUFBUSxZQUFhLFlBQWFDLEdBR2pGRSxRQUFRM0MsUUFBUSxRQUFVRixLQUFLSSxhQUFhc0MsUUFBUSxTQUFVRSxJQUdoRU4sWUFBYSxXQUNYdEMsS0FBS0osV0FBVzZDLElBQUksZ0JBQWlCLE1BQ3JDekMsS0FBSzhDLGNBR1B0QyxpQkFBa0IsU0FBVXVDLEVBQUluRCxHQUM5QixJQUFJb0QsRUFBUWhELEtBQUtTLGtCQUFrQmIsR0FNbkMsT0FKS29ELEdBQ0hoRCxLQUFLOEMsYUFHQUUsR0FHVEYsV0FBWSxXQUVWaEQsU0FBU0MsTUFBTUcsUUFBUSxVQUFVd0MsUUFDL0IsWUFDQTFDLEtBQUtKLFdBQVdTLElBQUksTUFDcEIsaUJBQ0EscURBSUpJLGtCQUFtQixTQUFVYixHQUUzQixPQURBQSxFQUFhQSxHQUFjSSxLQUFLSixZQUNkUyxJQUFJLG1CQUFvQixHQUc1QzRDLFVBQVcsU0FBVUwsR0FDbkIsT0FBT0EsRUFBVXZDLElBQUksVUFBVTZDLE9BQVMsR0FHMUN4QyxZQUFhLFNBQVVrQyxHQUNyQixJQUFJTyxHQUFRLEVBQ1JDLEVBQXFCUixFQUFVUyxTQUFTLGFBQ3hDQyxFQUFvQnRELEtBQUtTLG9CQUN6QjhDLEVBQWF2RCxLQUFLaUQsVUFBVUwsR0FTaEMsT0FMS1EsR0FBdUJHLElBQWNELElBQ3hDdEQsS0FBS0wsZ0JBQWdCNkQsU0FDckJMLEdBQVEsR0FHSEEsR0FHVE0saUJBQWtCLFNBQVVDLEVBQVVDLEdBQ3BDLElBQUlDLEVBQVE1RCxLQUFLSixXQUFXUyxJQUFJcUQsR0FJaEMsR0FBSUUsRUFJRixHQUFjLHFCQUFWQSxFQUNGQSxFQUFRQyxPQUFPQyxZQUFZQyxnQkFDdEIsQ0FDTCxJQUFJQyxFQUFjSixFQUFNSyxRQUFRLFVBQVcsSUFBSUEsUUFBUSxJQUFLLElBRXhERCxJQUFnQkosSUFFbEJBLEVBQVFELEVBQVdLLElBS3pCLE9BQU9KLEdBR1RNLGNBQWUsV0FJYixPQUhnQnBFLFNBQVNDLE1BQU1HLFFBQVEsT0FBT3dDLFFBQVEsV0FBWTFDLEtBQUtJLGFBQ3RDQyxJQUFJLFVBRWI4RCxPQUFPLFNBQVVDLEVBQU1DLEdBRTdDLE9BREFELEVBQUtDLEVBQU1oRSxJQUFJLFFBQVVnRSxFQUFNaEUsSUFBSSxTQUM1QitELFFBSVgxQyw2Q0FBOEMsU0FBVWlCLEVBQVcyQixHQUNqRSxJQUFJWCxFQUFhM0QsS0FBS2tFLGdCQUV0QnZCLEVBQVU0QixLQUFPdkUsS0FBS3lELGlCQUFpQixhQUFjRSxHQUNyRGhCLEVBQVU2QixHQUFLeEUsS0FBS3lELGlCQUFpQixXQUFZRSxHQUNqRGhCLEVBQVU4QixRQUFVekUsS0FBS3lELGlCQUFpQixnQkFBaUJFLEdBQzNEaEIsRUFBVStCLEtBQU8xRSxLQUFLeUQsaUJBQWlCLGFBQWNFLEdBRXJEVyxFQUFHLEtBQU0zQixJQUdYZ0MsZ0JBQWlCLFdBQ2YzRSxLQUFLTCxnQkFBZ0JpRixnQkFDZDVFLEtBQUtMLG1CQUloQmtGLE9BQU9DLFVBQVVDLE1BQU0sV0FDckIsT0FBTyxJQUFJeEYiLCJmaWxlIjoibWFpbi5taW4uanMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBtYW51YWwgc3dpdGNoIHRvIGhhdmUgbW9yZSBzdHVmZiBwcmludGVkIHRvIGNvbnNvbGVcbnZhciBERUJVRyA9IGZhbHNlXG5cbi8vIGdvb2QgZG9jdW1lbnRhdGlvbiBvbiBiYWNrYm9uZSBldmVudCBoYW5kbGluZ1xuLy8gaHR0cDovL2JhY2tib25lanMub3JnLyNFdmVudHNcblxudmFyIFZpZGVvbWFpbEZpZWxkQ29udHJvbGxlciA9IE1hcmlvbmV0dGUuT2JqZWN0LmV4dGVuZCh7XG5cbiAgdmlkZW9tYWlsQ2xpZW50OiBudWxsLFxuXG4gIC8vIG5vdCBzdXJlIGlmIHRoaXMgaXMgYSBnb29kIGlkZWEsIGJ1dCBpIG5lZWQgYSByZWZlcmVuY2UgdG8gaXRcbiAgZmllbGRNb2RlbDogbnVsbCxcblxuICBpbml0aWFsaXplOiBmdW5jdGlvbiAoKSB7XG4gICAgQmFja2JvbmUuUmFkaW8uREVCVUcgPSBERUJVR1xuXG4gICAgdGhpcy5saXN0ZW5UbyhcbiAgICAgIEJhY2tib25lLlJhZGlvLmNoYW5uZWwoJ3ZpZGVvbWFpbCcpLFxuICAgICAgJ2luaXQ6bW9kZWwnLFxuICAgICAgdGhpcy5yZWdpc3RlclZpZGVvbWFpbEZpZWxkXG4gICAgKVxuICB9LFxuXG4gIGdldEZvcm1JZDogZnVuY3Rpb24gKCkge1xuICAgIHJldHVybiB0aGlzLmZpZWxkTW9kZWwuZ2V0KCdmb3JtSUQnKVxuICB9LFxuXG4gIHJlZ2lzdGVyVmlkZW9tYWlsRmllbGQ6IGZ1bmN0aW9uIChmaWVsZE1vZGVsKSB7XG4gICAgLy8gd29ya2Fyb3VuZCBmb3IgaHR0cHM6Ly9naXRodWIuY29tL3dwbmluamFzL25pbmphLWZvcm1zL2lzc3Vlcy8yNjc1XG4gICAgLy8gYWxzbyBwcmV2ZW50cyBmcm9tIGV2ZW50IGVtaXR0ZXIgbGVha3MgdW5kZXIgcmFjZSBjb25kaXRpb25zXG4gICAgaWYgKCF0aGlzLnZpZGVvbWFpbENsaWVudCkge1xuICAgICAgdGhpcy5maWVsZE1vZGVsID0gZmllbGRNb2RlbFxuXG4gICAgICB0aGlzLmxvYWRWaWRlb21haWxDbGllbnQoKVxuXG4gICAgICAvLyBjdXN0b20gZmllbGQgdmFsaWRhdGlvbiwgc2luY2Ugd2UgYXJlbid0IHVzaW5nIGEgc3RhbmRhcmQgYHZhbHVlYFxuICAgICAgLy8gZm9yIHRoZSB2aWRlb21haWwgaW5wdXRcbiAgICAgIEJhY2tib25lLlJhZGlvLmNoYW5uZWwoJ3ZpZGVvbWFpbCcpLnJlcGx5KFxuICAgICAgICAndmFsaWRhdGU6cmVxdWlyZWQnLFxuICAgICAgICB0aGlzLnZhbGlkYXRlUmVxdWlyZWQsXG4gICAgICAgIHRoaXNcbiAgICAgIClcblxuICAgICAgQmFja2JvbmUuUmFkaW8uY2hhbm5lbCgndmlkZW9tYWlsJykucmVwbHkoXG4gICAgICAgICd2YWxpZGF0ZTptb2RlbERhdGEnLFxuICAgICAgICB0aGlzLnZhbGlkYXRlVmlkZW9tYWlsLFxuICAgICAgICB0aGlzXG4gICAgICApXG5cbiAgICAgIC8vIGNvbnRyb2wgc3VibWlzc2lvbiBwcm9ncmVzcyxcbiAgICAgIC8vIHNvIHRoYXQgd2UgY2FuIFBPU1QgdG8gdGhlIFZpZGVvbWFpbCBzZXJ2ZXIgZmlyc3RcbiAgICAgIEJhY2tib25lLlJhZGlvLmNoYW5uZWwoJ2Zvcm0tJyArIHRoaXMuZ2V0Rm9ybUlkKCkpLnJlcGx5KFxuICAgICAgICAnbWF5YmU6c3VibWl0JyxcbiAgICAgICAgdGhpcy5tYXliZVN1Ym1pdCxcbiAgICAgICAgdGhpcyxcbiAgICAgICAgZmllbGRNb2RlbFxuICAgICAgKVxuICAgIH1cbiAgfSxcblxuICBsb2FkVmlkZW9tYWlsQ2xpZW50OiBmdW5jdGlvbiAoKSB7XG4gICAgdmFyIGltYWdlUXVhbGl0eVBlcmNlbnRhZ2UgPSB0aGlzLmZpZWxkTW9kZWwuZ2V0KCdpbWFnZV9xdWFsaXR5JykgfHwgNDBcblxuICAgIGlmIChpbWFnZVF1YWxpdHlQZXJjZW50YWdlID4gMTAwKSB7XG4gICAgICBpbWFnZVF1YWxpdHlQZXJjZW50YWdlID0gMTAwXG4gICAgfSBlbHNlIGlmIChpbWFnZVF1YWxpdHlQZXJjZW50YWdlIDwgMSkge1xuICAgICAgaW1hZ2VRdWFsaXR5UGVyY2VudGFnZSA9IDFcbiAgICB9XG5cbiAgICB0aGlzLnZpZGVvbWFpbENsaWVudCA9IG5ldyBWaWRlb21haWxDbGllbnQoe1xuICAgICAgc2l0ZU5hbWU6IHRoaXMuZmllbGRNb2RlbC5nZXQoJ3NpdGVfbmFtZScpLFxuICAgICAgdmlkZW86IHtcbiAgICAgICAgbGltaXRTZWNvbmRzOiB0aGlzLmZpZWxkTW9kZWwuZ2V0KCdsaW1pdF9zZWNvbmRzJykgfHwgOTAsXG4gICAgICAgIHdpZHRoOiB0aGlzLmZpZWxkTW9kZWwuZ2V0KCd3aWR0aCcpIHx8IDMyMCxcbiAgICAgICAgY291bnRkb3duOiB0aGlzLmZpZWxkTW9kZWwuZ2V0KCdjb3VudGRvd24nKSB8fCBmYWxzZVxuICAgICAgfSxcbiAgICAgIGF1ZGlvOiB7XG4gICAgICAgIGVuYWJsZWQ6IHRoaXMuZmllbGRNb2RlbC5nZXQoJ2F1ZGlvX2VuYWJsZWQnKSB8fCB0cnVlXG4gICAgICB9LFxuICAgICAgaW1hZ2U6IHtcbiAgICAgICAgcXVhbGl0eTogaW1hZ2VRdWFsaXR5UGVyY2VudGFnZSAvIDEwMCAvLyBtdXN0IGJlIGEgZmxvYXRcbiAgICAgIH0sXG4gICAgICBzZWxlY3RvcnM6IHtcbiAgICAgICAgc3VibWl0QnV0dG9uU2VsZWN0b3I6ICcuc3VibWl0LXdyYXAgaW5wdXQnXG4gICAgICB9LFxuICAgICAgY2FsbGJhY2tzOiB7XG4gICAgICAgIC8vIHVnbHkgbmFtZSBlaD9cbiAgICAgICAgYWRqdXN0Rm9ybURhdGFCZWZvcmVQb3N0aW5nOiB0aGlzLmFkanVzdEZvcm1EYXRhQmVmb3JlUG9zdGluZ1RvVmlkZW9tYWlsU2VydmVyLmJpbmQodGhpcylcbiAgICAgIH0sXG4gICAgICAvLyBsZWF2ZSBpdCB0byBuaW5qYSBmb3JtIHRvIHZhbGlkYXRlIHRoZSBpbnB1dHNcbiAgICAgIGVuYWJsZUF1dG9WYWxpZGF0aW9uOiBmYWxzZSxcbiAgICAgIC8vIGxlYXZlIGl0IHRvIG5pbmphIGZvcm0gdG8gZGVhbCB3aXRoIGZvcm0gc3VibWlzc2lvbnNcbiAgICAgIGVuYWJsZUF1dG9TdWJtaXNzaW9uOiBmYWxzZSxcbiAgICAgIC8vIGxvZyBhY3Rpb25zL2V2ZW50cyB0byBjb25zb2xlXG4gICAgICB2ZXJib3NlOiB0aGlzLmZpZWxkTW9kZWwuZ2V0KCd2ZXJib3NlJykgfHwgREVCVUdcbiAgICB9KVxuXG4gICAgdGhpcy52aWRlb21haWxDbGllbnQub24odGhpcy52aWRlb21haWxDbGllbnQuZXZlbnRzLlBSRVZJRVcsIHRoaXMub25QcmV2aWV3LmJpbmQodGhpcykpXG4gICAgdGhpcy52aWRlb21haWxDbGllbnQub24odGhpcy52aWRlb21haWxDbGllbnQuZXZlbnRzLlNVQk1JVFRFRCwgdGhpcy5vblN1Ym1pdHRlZC5iaW5kKHRoaXMpKVxuICAgIHRoaXMudmlkZW9tYWlsQ2xpZW50Lm9uKHRoaXMudmlkZW9tYWlsQ2xpZW50LmV2ZW50cy5HT0lOR19CQUNLLCB0aGlzLm9uR29pbmdCYWNrLmJpbmQodGhpcykpXG5cbiAgICB0aGlzLnZpZGVvbWFpbENsaWVudC5zaG93KClcbiAgfSxcblxuICAvLyBuZWVkZWQgdG8gZ2V0IHRoZSB2aWRlb21haWwga2V5IHdoaWNoIGlzIHJlcXVpcmVkIGJlZm9yZVxuICAvLyBzdWJtaXR0aW5nIHRvIHRoZSB2aWRlb21haWwgc2VydmVyXG4gIG9uUHJldmlldzogZnVuY3Rpb24gKGtleSkge1xuICAgIHRoaXMuZmllbGRNb2RlbC5zZXQoJ3ZpZGVvbWFpbC1rZXknLCBrZXkpXG4gICAgQmFja2JvbmUuUmFkaW9cbiAgICAgIC5jaGFubmVsKCdmaWVsZHMnKVxuICAgICAgLy8gY2xlYXJzIGFueSBwcmV2aW91cyBlcnJvcnNcbiAgICAgIC5yZXF1ZXN0KCdyZW1vdmU6ZXJyb3InLCB0aGlzLmZpZWxkTW9kZWwuZ2V0KCdpZCcpLCAncmVxdWlyZWQtZXJyb3InKVxuICB9LFxuXG4gIG9uU3VibWl0dGVkOiBmdW5jdGlvbiAodmlkZW9tYWlsKSB7XG4gICAgdmFyIGZvcm1Nb2RlbCA9IG5mUmFkaW8uY2hhbm5lbCgnYXBwJykucmVxdWVzdCgnZ2V0OmZvcm0nLCB0aGlzLmdldEZvcm1JZCgpKVxuXG4gICAgLy8gdG9kbyBpc250ICdmb3JtLScgKyBmb3JtTW9kZWwuZ2V0KCdpZCcpIHRoZSBzYW1lIGFzIHRoZSBmb3JtSUQgYWxyZWFkeT9cbiAgICBuZlJhZGlvLmNoYW5uZWwoJ2Zvcm0tJyArIGZvcm1Nb2RlbC5nZXQoJ2lkJykpLnJlcXVlc3QoJ2FkZDpleHRyYScsICd2aWRlb21haWwnLCB2aWRlb21haWwpXG5cbiAgICAvLyByZXN0YXJ0IHN1Ym1pc3Npb24gYWdhaW4sIHRoaXMgdGltZSB0byB0aGUgcmVhbCB3cCBzaXRlXG4gICAgbmZSYWRpby5jaGFubmVsKCdmb3JtLScgKyB0aGlzLmdldEZvcm1JZCgpKS5yZXF1ZXN0KCdzdWJtaXQnLCBmb3JtTW9kZWwpXG4gIH0sXG5cbiAgb25Hb2luZ0JhY2s6IGZ1bmN0aW9uICgpIHtcbiAgICB0aGlzLmZpZWxkTW9kZWwuc2V0KCd2aWRlb21haWwta2V5JywgbnVsbClcbiAgICB0aGlzLmludmFsaWRhdGUoKVxuICB9LFxuXG4gIHZhbGlkYXRlUmVxdWlyZWQ6IGZ1bmN0aW9uIChlbCwgZmllbGRNb2RlbCkge1xuICAgIHZhciB2YWxpZCA9IHRoaXMudmFsaWRhdGVWaWRlb21haWwoZmllbGRNb2RlbClcblxuICAgIGlmICghdmFsaWQpIHtcbiAgICAgIHRoaXMuaW52YWxpZGF0ZSgpXG4gICAgfVxuXG4gICAgcmV0dXJuIHZhbGlkXG4gIH0sXG5cbiAgaW52YWxpZGF0ZTogZnVuY3Rpb24gKCkge1xuICAgIC8vIG92ZXJyaWRlIGRlZmF1bHQgYmVoYXZpb3VyIHNvIHRoYXQgd2UgY2FuIHNldCBvdXIgb3duIGVycm9yIHRleHQgaGVyZVxuICAgIEJhY2tib25lLlJhZGlvLmNoYW5uZWwoJ2ZpZWxkcycpLnJlcXVlc3QoXG4gICAgICAnYWRkOmVycm9yJyxcbiAgICAgIHRoaXMuZmllbGRNb2RlbC5nZXQoJ2lkJyksXG4gICAgICAncmVxdWlyZWQtZXJyb3InLFxuICAgICAgJ1JlY29yZCBhbmQgY2xpY2sgb24gc3RvcCB0byBzZWUgYSBwcmV2aWV3IHZpZGVvLidcbiAgICApXG4gIH0sXG5cbiAgdmFsaWRhdGVWaWRlb21haWw6IGZ1bmN0aW9uIChmaWVsZE1vZGVsKSB7XG4gICAgZmllbGRNb2RlbCA9IGZpZWxkTW9kZWwgfHwgdGhpcy5maWVsZE1vZGVsXG4gICAgcmV0dXJuIGZpZWxkTW9kZWwuZ2V0KCd2aWRlb21haWwta2V5JykgfHwgZmFsc2VcbiAgfSxcblxuICBoYXNFcnJvcnM6IGZ1bmN0aW9uIChmb3JtTW9kZWwpIHtcbiAgICByZXR1cm4gZm9ybU1vZGVsLmdldCgnZXJyb3JzJykubGVuZ3RoID4gMFxuICB9LFxuXG4gIG1heWJlU3VibWl0OiBmdW5jdGlvbiAoZm9ybU1vZGVsKSB7XG4gICAgdmFyIG1heWJlID0gdHJ1ZVxuICAgIHZhciB2aWRlb21haWxTdWJtaXR0ZWQgPSBmb3JtTW9kZWwuZ2V0RXh0cmEoJ3ZpZGVvbWFpbCcpXG4gICAgdmFyIHZpZGVvbWFpbFJlY29yZGVkID0gdGhpcy52YWxpZGF0ZVZpZGVvbWFpbCgpXG4gICAgdmFyIGVycm9ybmVvdXMgPSB0aGlzLmhhc0Vycm9ycyhmb3JtTW9kZWwpXG5cbiAgICAvLyBob2xkIG9uIHdpdGggZmluYWwgZm9ybSBzdWJtaXNzaW9uIHdoZW4gb25lIHdhcyByZWNvcmRlZFxuICAgIC8vIGJ1dCBoYXNuJ3QgYmVlbiBzdWJtaXR0ZWQgdG8gdGhlIHZpZGVvbWFpbCBzZXJ2ZXIgeWV0XG4gICAgaWYgKCF2aWRlb21haWxTdWJtaXR0ZWQgJiYgIWVycm9ybmVvdXMgJiYgdmlkZW9tYWlsUmVjb3JkZWQpIHtcbiAgICAgIHRoaXMudmlkZW9tYWlsQ2xpZW50LnN1Ym1pdCgpXG4gICAgICBtYXliZSA9IGZhbHNlXG4gICAgfVxuXG4gICAgcmV0dXJuIG1heWJlXG4gIH0sXG5cbiAgZ2V0TWVyZ2VUYWdWYWx1ZTogZnVuY3Rpb24gKGZpZWxkS2V5LCBmb3JtVmFsdWVzKSB7XG4gICAgdmFyIHZhbHVlID0gdGhpcy5maWVsZE1vZGVsLmdldChmaWVsZEtleSlcblxuICAgIC8vIGl0IGNhbiBoYXBwZW4gdGhhdCB0aGUgdXNlciBoYXMgY29uZmlndXJlZCBzb21ldGhpbmcgd3JvbmcsXG4gICAgLy8gaS5FLiBhbiBlbXB0eSBlbWFpbF9mcm9tLiBpbiB0aGF0IGNhc2UganVzdCBpZ25vcmUgLi4uXG4gICAgaWYgKHZhbHVlKSB7XG4gICAgICAvLyBhZG1pbiBlbWFpbCBsb2NhbGl6ZWQgZnJvbSBiYWNrZW5kLCBhIGJpdCB1Z2x5XG4gICAgICAvLyB0b2RvIGFzayBmb3IgYW4gZW5kcG9pbnQgdG8gcHJvY2VzcyB0aG9zZSBzcGVjaWFsIG1lcmdlIHRhZ3NcbiAgICAgIC8vIGh0dHBzOi8vZ2l0aHViLmNvbS9iaW5hcnlraXRjaGVuL3ZpZGVvbWFpbC1mb3ItbmluamEtZm9ybXMvaXNzdWVzLzMwXG4gICAgICBpZiAodmFsdWUgPT09ICd7d3A6YWRtaW5fZW1haWx9Jykge1xuICAgICAgICB2YWx1ZSA9IHdpbmRvdy5uZlZpZGVvbWFpbC5hZG1pbl9lbWFpbFxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdmFyIHJhd0ZpZWxkS2V5ID0gdmFsdWUucmVwbGFjZSgne2ZpZWxkOicsICcnKS5yZXBsYWNlKCd9JywgJycpXG5cbiAgICAgICAgaWYgKHJhd0ZpZWxkS2V5ICE9PSB2YWx1ZSkge1xuICAgICAgICAgIC8vIHllcyBpdCB3YXMgYSBtZXJnZSB0YWcsIHNvIHVzZSBpdFxuICAgICAgICAgIHZhbHVlID0gZm9ybVZhbHVlc1tyYXdGaWVsZEtleV1cbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybiB2YWx1ZVxuICB9LFxuXG4gIGdldEZvcm1WYWx1ZXM6IGZ1bmN0aW9uICgpIHtcbiAgICB2YXIgZm9ybU1vZGVsID0gQmFja2JvbmUuUmFkaW8uY2hhbm5lbCgnYXBwJykucmVxdWVzdCgnZ2V0OmZvcm0nLCB0aGlzLmdldEZvcm1JZCgpKVxuICAgIHZhciBmaWVsZHNDb2xsZWN0aW9uID0gZm9ybU1vZGVsLmdldCgnZmllbGRzJylcblxuICAgIHJldHVybiBmaWVsZHNDb2xsZWN0aW9uLnJlZHVjZShmdW5jdGlvbiAobWVtbywgZmllbGQpIHtcbiAgICAgIG1lbW9bZmllbGQuZ2V0KCdrZXknKV0gPSBmaWVsZC5nZXQoJ3ZhbHVlJylcbiAgICAgIHJldHVybiBtZW1vXG4gICAgfSwge30pXG4gIH0sXG5cbiAgYWRqdXN0Rm9ybURhdGFCZWZvcmVQb3N0aW5nVG9WaWRlb21haWxTZXJ2ZXI6IGZ1bmN0aW9uICh2aWRlb21haWwsIGNiKSB7XG4gICAgdmFyIGZvcm1WYWx1ZXMgPSB0aGlzLmdldEZvcm1WYWx1ZXMoKVxuXG4gICAgdmlkZW9tYWlsLmZyb20gPSB0aGlzLmdldE1lcmdlVGFnVmFsdWUoJ2VtYWlsX2Zyb20nLCBmb3JtVmFsdWVzKVxuICAgIHZpZGVvbWFpbC50byA9IHRoaXMuZ2V0TWVyZ2VUYWdWYWx1ZSgnZW1haWxfdG8nLCBmb3JtVmFsdWVzKVxuICAgIHZpZGVvbWFpbC5zdWJqZWN0ID0gdGhpcy5nZXRNZXJnZVRhZ1ZhbHVlKCdlbWFpbF9zdWJqZWN0JywgZm9ybVZhbHVlcylcbiAgICB2aWRlb21haWwuYm9keSA9IHRoaXMuZ2V0TWVyZ2VUYWdWYWx1ZSgnZW1haWxfYm9keScsIGZvcm1WYWx1ZXMpXG5cbiAgICBjYihudWxsLCB2aWRlb21haWwpXG4gIH0sXG5cbiAgb25CZWZvcmVEZXN0cm95OiBmdW5jdGlvbiAoKSB7XG4gICAgdGhpcy52aWRlb21haWxDbGllbnQudW5sb2FkKClcbiAgICBkZWxldGUgdGhpcy52aWRlb21haWxDbGllbnRcbiAgfVxufSlcblxualF1ZXJ5KGRvY3VtZW50KS5yZWFkeShmdW5jdGlvbiAoKSB7XG4gIHJldHVybiBuZXcgVmlkZW9tYWlsRmllbGRDb250cm9sbGVyKClcbn0pXG4iXX0=
