{"version":3,"sources":["main.js"],"names":["DEBUG","VideomailFieldController","Marionette","Object","extend","videomailClient","fieldModel","initialize","Backbone","Radio","this","listenTo","channel","registerVideomailField","getFormId","get","loadVideomailClient","reply","validateRequired","validateVideomail","maybeSubmit","VideomailClient","siteName","video","limitSeconds","width","countdown","audio","enabled","selectors","submitButtonSelector","callbacks","adjustFormDataBeforePosting","adjustFormDataBeforePostingToVideomailServer","bind","enableAutoValidation","verbose","on","events","PREVIEW","onPreview","SUBMITTED","onSubmitted","GOING_BACK","onGoingBack","show","key","set","request","videomail","formModel","nfRadio","invalidate","el","valid","getExtra","submit","getMergeTagValue","fieldKey","formValues","value","window","nfVideomail","admin_email","rawFieldKey","replace","getFormValues","reduce","memo","field","cb","from","to","subject","body","onBeforeDestroy","unload","jQuery","document","ready"],"mappings":"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","file":"main.min.js","sourcesContent":["// manual switch to have more stuff printed to console\nvar DEBUG = true\n\n// good documentation on backbone event handling\n// http://backbonejs.org/#Events\n\nvar VideomailFieldController = Marionette.Object.extend({\n\n  videomailClient: null,\n\n  // not sure if this is a good idea, but i need a reference to it\n  fieldModel: null,\n\n  initialize: function () {\n    Backbone.Radio.DEBUG = DEBUG\n\n    this.listenTo(\n      Backbone.Radio.channel('videomail'),\n      'init:model',\n      this.registerVideomailField\n    )\n  },\n\n  getFormId: function () {\n    return this.fieldModel.get('formID')\n  },\n\n  registerVideomailField: function (fieldModel) {\n    // workaround for https://github.com/wpninjas/ninja-forms/issues/2675\n    // also prevents from event emitter leaks under race conditions\n    if (!this.videomailClient) {\n      this.fieldModel = fieldModel\n\n      this.loadVideomailClient()\n\n      // custom field validation, since we aren't using a standard `value`\n      Backbone.Radio.channel('videomail').reply(\n        'validate:required',\n        this.validateRequired,\n        this\n      )\n\n      Backbone.Radio.channel('videomail').reply(\n        'validate:modelData',\n        this.validateVideomail,\n        this\n      )\n\n      // pause submission so that we can POST to the Videomail server first\n      Backbone.Radio.channel('form-' + this.getFormId()).reply(\n        'maybe:submit',\n        this.maybeSubmit,\n        this,\n        fieldModel\n      )\n    }\n  },\n\n  loadVideomailClient: function () {\n    this.videomailClient = new VideomailClient({\n      siteName: this.fieldModel.get('site_name'),\n      video: {\n        limitSeconds: this.fieldModel.get('limit_seconds') || 90,\n        width: this.fieldModel.get('width') || 320,\n        countdown: this.fieldModel.get('countdown') || false\n      },\n      audio: {\n        enabled: this.fieldModel.get('audio_enabled') || false\n      },\n      selectors: {\n        submitButtonSelector: '.submit-wrap input'\n      },\n      callbacks: {\n        // ugly name eh?\n        adjustFormDataBeforePosting: this.adjustFormDataBeforePostingToVideomailServer.bind(this)\n      },\n      // leave it to ninja form to validate the inputs\n      enableAutoValidation: false,\n      // log actions/events to console\n      verbose: this.fieldModel.get('verbose') || DEBUG\n    })\n\n    this.videomailClient.on(this.videomailClient.events.PREVIEW, this.onPreview.bind(this))\n    this.videomailClient.on(this.videomailClient.events.SUBMITTED, this.onSubmitted.bind(this))\n    this.videomailClient.on(this.videomailClient.events.GOING_BACK, this.onGoingBack.bind(this))\n\n    this.videomailClient.show()\n  },\n\n  // needed to get the videomail key which is required before\n  // submitting to the videomail server\n  onPreview: function (key) {\n    this.fieldModel.set('videomail-key', key)\n    Backbone.Radio\n      .channel('fields')\n      // clears any previous errors\n      .request('remove:error', this.fieldModel.get('id'), 'required-error')\n  },\n\n  onSubmitted: function (videomail) {\n    var formModel = nfRadio.channel('app').request('get:form', this.getFormId())\n\n    // todo isnt 'form-' + formModel.get('id') the same as the formID already?\n    nfRadio.channel('form-' + formModel.get('id')).request('add:extra', 'videomail', videomail)\n\n    // restart submission again, this time to the real wp site\n    nfRadio.channel('form-' + this.getFormId()).request('submit', formModel)\n  },\n\n  onGoingBack: function () {\n    this.fieldModel.set('videomail-key', null)\n    this.invalidate()\n  },\n\n  validateRequired: function (el, fieldModel) {\n    var valid = this.validateVideomail(fieldModel)\n\n    if (!valid) {\n      this.invalidate()\n    }\n\n    return valid\n  },\n\n  invalidate: function () {\n    // override default behaviour so that we can set our own error text here\n    Backbone.Radio.channel('fields').request(\n      'add:error',\n      this.fieldModel.get('id'),\n      'required-error',\n      'Record and click on stop to see a preview video.'\n    )\n  },\n\n  validateVideomail: function (fieldModel) {\n    return fieldModel.get('videomail-key') || false\n  },\n\n  maybeSubmit: function (formModel) {\n    if (!formModel.getExtra('videomail')) {\n      this.videomailClient.submit()\n      return false\n    } else {\n      return true\n    }\n  },\n\n  getMergeTagValue: function (fieldKey, formValues) {\n    var value = this.fieldModel.get(fieldKey)\n\n    // it can happen that the user has configured something wrong,\n    // i.E. an empty email_from. in that case just ignore ...\n    if (value) {\n      // admin email localized from backend, a bit ugly\n      // todo ask for an endpoint to process those special merge tags\n      // https://github.com/wpninjas/ninja-forms-videomail/issues/30\n      if (value === '{wp:admin_email}') {\n        value = window.nfVideomail.admin_email\n      } else {\n        var rawFieldKey = value.replace('{field:', '').replace('}', '')\n\n        if (rawFieldKey !== value) {\n          // yes it was a merge tag, so use it\n          value = formValues[rawFieldKey]\n        }\n      }\n    }\n\n    return value\n  },\n\n  getFormValues: function () {\n    var formModel = Backbone.Radio.channel('app').request('get:form', this.getFormId())\n    var fieldsCollection = formModel.get('fields')\n\n    return fieldsCollection.reduce(function (memo, field) {\n      memo[field.get('key')] = field.get('value')\n      return memo\n    }, {})\n  },\n\n  adjustFormDataBeforePostingToVideomailServer: function (videomail, cb) {\n    var formValues = this.getFormValues()\n\n    videomail.from = this.getMergeTagValue('email_from', formValues)\n    videomail.to = this.getMergeTagValue('email_to', formValues)\n    videomail.subject = this.getMergeTagValue('email_subject', formValues)\n    videomail.body = this.getMergeTagValue('email_body', formValues)\n\n    cb(null, videomail)\n  },\n\n  // never gets called, why?\n  // related to https://github.com/wpninjas/ninja-forms/issues/2675\n  onBeforeDestroy: function () {\n    this.videomailClient.unload()\n    delete this.videomailClient\n  }\n})\n\njQuery(document).ready(function () {\n  return new VideomailFieldController()\n})\n"]}